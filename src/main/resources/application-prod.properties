# Keys like URL, DB name, and DB credentials should be provided by the environment. However, I just hardcoded
# them since this project for practicing only.

# spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/inventory
# spring.datasource.username=${DB_USER:root}
# spring.datasource.password=${DB_PASSWORD:rootpassword}
spring.datasource.url=jdbc:mysql://localhost:3306/food-delivery-prod?createDatabaseIfNotExist=true
spring.datasource.username=joe
spring.datasource.password=vv44sRUF#NCtu7zKcfR5uYdps6*

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
# spring.jpa.properties.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.com.joe.abelaziz=INFO
logging.level.org.hibernate=ERROR
logging.file.path=/logging/global/logs
logging.file.name=${logging.file.path}/global.log
# Avoids dropping all tables to prevent accidental use in production environment.
spring.flyway.clean-disabled=true

# logging.level.org.springframework.security=WARN
# logging.level.org.springframework.security=INFO
# logging.level.org.springframework.security.access=INFO
# logging.level.org.springframework.security.authentication=INFO
# logging.level.org.springframework.security.web.authentication=INFO
# logging.level.org.springframework.security.web.access=INFO

application.security.jwt.secret-key=f553403da766f00ec6ecebc4c4a547789a1a7aafd083403e2ff7f8a8fb168c4f
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000

# Restaurant ratings (avg rating, earning is updated daily)
scheduler.update-restaurant-ratings.rate=86400000
# Courier ratings (avg rating, earning, and total orders is updated hourly)
scheduler.update-courier-ratings.rate=3600000